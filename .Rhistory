if(z1 < z2){
num <- intersect(which(M[z1,] != 0), which(M[z2,] != 0))
sum <- 0
for(z3 in num){
sum <- sum + (M[z1,][z3] - M[z2,][z3])^2
}
s[z2,z1] <- length(num) / (1+sqrt(sum))
if(s[z2, z1] > 1) s[z2,z1] <- 1
if(s[z2, z1] < -1) s[z2,z1] <- -1
}
}
}
ts <- t(s)
w <- which(upper.tri(ts))
s[w] <- ts[w]
s
}
NearestNUserNeighborhood <- function(S, n){
row <- nrow(S)
neighbor <- matrix(0, row, n)
for(z1 in 1:row){
for(z2 in 1:n){
m <- which.max(S[,z1])
neighbor[z1,][z2] <- m
S[,z1][m] = 0
}
}
neighbor
}
UserBasedRecommender <- function(uid, n, M, S, N){
row <- ncol(N)
col <- ncol(M)
r <- matrix(0, row, col)
N1 <- N[uid,]
for(z1 in 1:length(N1)){
num <- intersect(which(M[uid,] == 0), which(M[N1[z1],]!= 0))
for(z2 in num){
r[z1,z2] = M[N1[z1],z2]*S[uid, N1[z1]]
}
}
print(r)
sum <- colSums(r)
s2 <- matrix(0, 2 ,col)
for(z1 in 1:length(N1)){
num <- intersect(which(colSums(r)!=0), which(M[N1[z1],]!=0))
for(z2 in num){
s2[1,][z2] <- s2[1,][z2] + S[uid, N1[z1]]
s2[2,][z2] <- s2[2,][z2] + 1
}
}
s2[, which(s2[2,] == 1)] = 10000
s2 <- s2[-2,]
r2 <- matrix(0, n, 2)
rr <- sum / s2
item <- dimnames(M)[[2]]
for(z1 in 1:n){
w <- which.max(rr)
if(rr[w] > 0.5){
r2[z1,1] <- item[which.max(rr)]
r2[z1,2] <- as.double(rr[w])
rr[w] = 0
}
}
r2
}
FILE <- "G:\USTC\statistics_computing\homework\item.csv"
FILE <- "G:/USTC/statistics_computing/homework/item.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
S <- EuclideanDistanceSimilarity(M)
N <- NearestNUserNeighborhood(S, NEIGHBORHOOD_NUM)
R1 <-UserBasedRecommender(1, RECOMMENDER_NUM, M, S, N)
R1
R2 <- UserBasedRecommender(2, RECOMMENDER_NUM, M, S, N)
R2
R5 <- UserBasedRecommender(5, RECOMMENDER_NUM, M, S, N)
R5
R4 <- UserBasedRecommender(4, RECOMMENDER_NUM, M, S, N)
R4
R3 <- UserBasedRecommender(3, RECOMMENDER_NUM, M, S, N)
R3
R1 <-UserBasedRecommender(1, RECOMMENDER_NUM, M, S, N)
R1
R1 <-UserBasedRecommender(1, RECOMMENDER_NUM, M, S, N)
R1
R2 <- UserBasedRecommender(2, RECOMMENDER_NUM, M, S, N)
R2
R3 <- UserBasedRecommender(3, RECOMMENDER_NUM, M, S, N)
R3
R4 <- UserBasedRecommender(4, RECOMMENDER_NUM, M, S, N)
R4
R5 <- UserBasedRecommender(5, RECOMMENDER_NUM, M, S, N)
R5
View(M)
FileDataModel <- function(file){
data <- read.csv(file, header = FALSE)
names(data) <- c("uid", "iid", "pref")
user <- unique(data$uid)
item <- unique(sort(data$iid))
uidx <- match(data$uid, user)
iidx <- match(data$iid, item)
M <- matrix(0, length(user), length(item))
i <- cbind(uidx, iidx, pref = data$pref)
for(n in 1:nrow(i)){
M[i[n,][1],i[n,][2]] <- i[n,][3]
}
dimnames(M)[[2]] <- item
M
}
FILE <- "G:/USTC/statistics_computing/homework/item.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
View(M)
load("~/R/StatComp20070/StatComp20070/data/data.rda")
View(data)
uid <- c(1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,5,5)
iid <- c(101,102,103,101,102,103,104,101,104,105,107,101,103,104,106,101,102,103,104,105,106)
pref <- c(5,3,2.5,2,2.5,5,2,2.5,4,4.5,5,5,3,4.5,4,4,3,2,4,3.5,4)
file <- data.frame(uid, iid, pref)
file
View(file)
M <- FileDataModel(file)
View(file)
uid <- c(1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,5,5)
iid <- c(101,102,103,101,102,103,104,101,104,105,107,101,103,104,106,101,102,103,104,105,106)
pref <- c(5,3,2.5,2,2.5,5,2,2.5,4,4.5,5,5,3,4.5,4,4,3,2,4,3.5,4)
Mbar <- data.frame(uid, iid, pref)
Mbar
M <- FileDataModel(Mbar)
101 <- c(5,2,2.5,5,4)
102 <- c(3,2.5,0,0,3)
103 <- c(2.5,5,0,3,2)
104 <- c(0,2,4,4.5,4)
105 <- c(0,0,4.5,0,3.5)
106 <- c(0,0,0,4,4)
107 <- c(0,0,5,0,0)
Mbar <- data.frame(101, 102, 103, 104, 105, 106, 107)
Mbar
View(Mbar)
FileDataModel <- function(file){
data <- read.csv(file,header = FALSE)
names(data) <- c("uid", "iid", "pref")
user <- unique(data$uid)
item <- unique(sort(data$iid))
uidx <- match(data$uid, user)
iidx <- match(data$iid, item)
M <- matrix(0, length(user), length(item))
i <- cbind(uidx, iidx, pref = data$pref)
for(n in 1:nrow(i)){
M[i[n,][1],i[n,][2]] <- i[n,][3]
}
dimnames(M)[[2]] <- item
M
}
FILE <- "G:/USTC/statistics_computing/homework/item.csv"
M <- FileDataModel(Mbar)
M <- FileDataModel(FILE)
View(M)
FileDataModel <- function(file){
data <- read.csv(file,header = FALSE)
names(data) <- c("uid", "iid", "pref")
user <- unique(data$uid)
item <- unique(sort(data$iid))
uidx <- match(data$uid, user)
iidx <- match(data$iid, item)
M <- matrix(0, length(user), length(item))
i <- cbind(uidx, iidx, pref = data$pref)
for(n in 1:nrow(i)){
M[i[n,][1],i[n,][2]] <- i[n,][3]
}
dimnames(M)[[2]] <- item
M
user
}
FILE <- "G:/USTC/statistics_computing/homework/item.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
M
FileDataModel <- function(file){
data <- read.csv(file,header = FALSE)
names(data) <- c("uid", "iid", "pref")
user <- unique(data$uid)
item <- unique(sort(data$iid))
uidx <- match(data$uid, user)
iidx <- match(data$iid, item)
M <- matrix(0, length(user), length(item))
i <- cbind(uidx, iidx, pref = data$pref)
for(n in 1:nrow(i)){
M[i[n,][1],i[n,][2]] <- i[n,][3]
}
dimnames(M)[[2]] <- item
M
length(user)
}
FILE <- "G:/USTC/statistics_computing/homework/item.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
M
FileDataModel <- function(file){
data <- read.csv(file,header = FALSE)
names(data) <- c("uid", "iid", "pref")
user <- unique(data$uid)-1
item <- unique(sort(data$iid))
uidx <- match(data$uid, user)
iidx <- match(data$iid, item)
M <- matrix(0, length(user), length(item))
i <- cbind(uidx, iidx, pref = data$pref)
for(n in 1:nrow(i)){
M[i[n,][1],i[n,][2]] <- i[n,][3]
}
dimnames(M)[[2]] <- item
M
}
FILE <- "G:/USTC/statistics_computing/homework/item.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
FileDataModel <- function(file){
data <- read.csv(file,header = FALSE)
names(data) <- c("uid", "iid", "pref")
user <- unique(data$uid)
item <- unique(sort(data$iid))
uidx <- match(data$uid, user)
iidx <- match(data$iid, item)
M <- matrix(0, length(user)-1, length(item))
i <- cbind(uidx, iidx, pref = data$pref)
for(n in 1:nrow(i)){
M[i[n,][1],i[n,][2]] <- i[n,][3]
}
dimnames(M)[[2]] <- item
M
}
FILE <- "G:/USTC/statistics_computing/homework/item.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
FILE <- "G:/USTC/statistics_computing/homework/item2.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
FileDataModel <- function(file){
data <- read.csv(file,header = FALSE)
names(data) <- c("uid", "iid", "pref")
user <- unique(data$uid)
item <- unique(sort(data$iid))
uidx <- match(data$uid, user)
iidx <- match(data$iid, item)
M <- matrix(0, length(user), length(item))
i <- cbind(uidx, iidx, pref = data$pref)
for(n in 1:nrow(i)){
M[i[n,][1],i[n,][2]] <- i[n,][3]
}
dimnames(M)[[2]] <- item
M
}
FILE <- "G:/USTC/statistics_computing/homework/item2.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
View(M)
View(M)
R6 <- UserBasedRecommender(6, RECOMMENDER_NUM, M, S, N)
R6
pages <- read.table(file = "G:/USTC/statistics_computing/homework/page.csv", header = FALSE, sep = ",")
names(pages) <- c("src","dist");
pages
View(pages)
src <- c(1,1,1,2,2,3,4)
dist <- c(2,3,4,3,4,4,2)
pages <- data.frame(src, dist)
View(pages)
save(pages, file = "pages.rda")
load("~/R/StatComp20070/StatComp20070/data/data.rda")
View(data)
save(pages, file = "pages.rda",compress = TRUE)
FileDataModel <- function(file){
data <- read.csv(file,header = FALSE,encoding = ‘UTF-8’)
names(data) <- c("uid", "iid", "pref")
user <- unique(data$uid)
item <- unique(sort(data$iid))
uidx <- match(data$uid, user)
iidx <- match(data$iid, item)
M <- matrix(0, length(user), length(item))
i <- cbind(uidx, iidx, pref = data$pref)
for(n in 1:nrow(i)){
M[i[n,][1],i[n,][2]] <- i[n,][3]
}
dimnames(M)[[2]] <- item
M
}
FileDataModel <- function(file){
data <- read.csv(file,header = FALSE,encoding = "UTF-8")
names(data) <- c("uid", "iid", "pref")
user <- unique(data$uid)
item <- unique(sort(data$iid))
uidx <- match(data$uid, user)
iidx <- match(data$iid, item)
M <- matrix(0, length(user), length(item))
i <- cbind(uidx, iidx, pref = data$pref)
for(n in 1:nrow(i)){
M[i[n,][1],i[n,][2]] <- i[n,][3]
}
dimnames(M)[[2]] <- item
M
}
FILE <- "G:/USTC/statistics_computing/homework/item2.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
FILE <- "G:/USTC/statistics_computing/homework/item.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
View(M)
adjacencyMatrix <- function(pages){
n <- max(apply(pages, 2, max))
A <- matrix(0, n, n)
for(i in 1:nrow(pages)) A[pages[i,]$dist,pages[i,]$src]<-1
A
}
probabilityMatrix <- function(G){
cs <- colSums(G)
cs[cs==0] <- 1
n <- nrow(G)
A <- matrix(0, nrow(G), ncol(G))
for (i in 1:n) A[i,] <- A[i,] + G[i,]/cs
A
}
eigenMatrix <- function(G, iter = 100){
iter <- 10
n <- nrow(G)
x <- rep(1,n)
for(i in 1:iter) x <- G %*% x
x/sum(x)
}
A <- adjacencyMatrix(pages)
A
G <- probabilityMatrix(A)
G
q<- eigenMatrix(G,100)
q
dProbabilityMatrix <- function(G,d = 0.85){
cs <- colSums(G)
cs[cs==0] <- 1
n <- nrow(G)
delta <- (1-d)/n
A <- matrix(delta, nrow(G), ncol(G))
for (i in 1:n) A[i,] <- d*G[i,]/cs
A
}
G <- dProbabilityMatrix(A)
G
A <- adjacencyMatrix(pages)
A
G <- dProbabilityMatrix(A)
G
dProbabilityMatrix <- function(G,d = 0.85){
cs <- colSums(G)
cs[cs==0] <- 1
n <- nrow(G)
delta <- (1-d)/n
A <- matrix(delta, nrow(G), ncol(G))
for (i in 1:n) A[i,] <- A[i,] + d*G[i,]/cs
A
}
G <- dProbabilityMatrix(A)
G
q<- eigenMatrix(G,100)
q
calEigenMatrix <- function(G){
x <- Re(eigen(G)$vectors[,1])
x/sum(x)
}
G <- probabilityMatrix(A)
G
q <- calEigenMatrix(G)
q
G <- dProbabilityMatrix(A)
G
q <- calEigenMatrix(G)
q
FILE <- "G:/edge_download/book-r2-master/2/item.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
View(M)
save(M, file = "H:/R/StatComp20070/StatComp20070/data/M.rda")
load("~/R/StatComp20070/StatComp20070/data/M.rda")
View(M)
FILE <- "G:/edge_download/book-r2-master/2/item.csv"
NEIGHBORHOOD_NUM <- 2
RECOMMENDER_NUM <- 3
M <- FileDataModel(FILE)
S <- EuclideanDistanceSimilarity(M)
N <- NearestNUserNeighborhood(S, NEIGHBORHOOD_NUM)
R1 <-UserBasedRecommender(1, RECOMMENDER_NUM, M, S, N)
R1
R2 <- UserBasedRecommender(2, RECOMMENDER_NUM, M, S, N)
R2
R3 <- UserBasedRecommender(3, RECOMMENDER_NUM, M, S, N)
R3
R4 <- UserBasedRecommender(4, RECOMMENDER_NUM, M, S, N)
R4
R5 <- UserBasedRecommender(5, RECOMMENDER_NUM, M, S, N)
R5
save(S, file = "H:/R/StatComp20070/StatComp20070/data/S.rda")
save(N, file = "H:/R/StatComp20070/StatComp20070/data/N.rda")
load("~/R/StatComp20070/StatComp20070/data/N.rda")
View(N)
load("~/R/StatComp20070/StatComp20070/data/S.rda")
View(S)
devtools::document()
devtools::document()
warnings()
devtools::document()
devtools::check()
load("~/R/StatComp20070/StatComp20070/data/M.rda")
View(M)
devtools::check()
.Last.error.trace
devtools::check()
load("~/R/StatComp20070/StatComp20070/data/N.rda")
View(N)
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
library(StatComp20070)
remove.packages("StatComp20070")
library(StatComp20070)
remove.packages("StatComp20070")
devtools::install_github("greensun0830/StatComp20070",
build_vignettes = TRUE,force=T)
library(StatComp20070)
##################
d = read.table('input.txt',sep='\t',quote = '')
# Input 1: the homework assignment date
date = as.character(d[1,1]) #'2020-09-29'
# Input 2: the ID of the reviewer (you)
reviewer = d[1,2] # '19xxx'
# Input 3: scores for the three submissions
score=as.numeric(d[1,3:5])
# Input 4: reasons
reason1=as.character(d[1,6])
reason2=as.character(d[1,7])
reason3=as.character(d[1,8])
##################
# Read the subscriber IDs
allID = read.table(file=paste('assignment(for reviewers)',date,'txt',sep='.'),head=TRUE)
##################
d = read.table('input.txt',sep='\t',quote = '')
# Input 1: the homework assignment date
date = as.character(d[1,1]) #'2020-09-29'
# Input 2: the ID of the reviewer (you)
reviewer = d[1,2] # '19xxx'
# Input 3: scores for the three submissions
score=as.numeric(d[1,3:5])
# Input 4: reasons
reason1=as.character(d[1,6])
reason2=as.character(d[1,7])
reason3=as.character(d[1,8])
##################
# Read the subscriber IDs
allID = read.table(file=paste('assignment(for reviewers)',date,'txt',sep='.'),head=TRUE)
cat(reason1)
cat(reason2)
cat(reason3)
name=paste("R",reviewer,date,sep="-");
scores <- data.frame(submission=IDs,score=score)
##################
d = read.table('input.txt',sep='\t',quote = '')
# Input 1: the homework assignment date
date = as.character(d[1,1]) #'2020-09-29'
# Input 2: the ID of the reviewer (you)
reviewer = d[1,2] # '19xxx'
# Input 3: scores for the three submissions
score=as.numeric(d[1,3:5])
# Input 4: reasons
reason1=as.character(d[1,6])
reason2=as.character(d[1,7])
reason3=as.character(d[1,8])
##################
# Read the subscriber IDs
allID = read.table(file=paste('assignment(for reviewers)',date,'txt',sep='.'),head=TRUE)
library(StatComp20070)
data(M)
attach(M)
S <- EuclideanDistanceSimilarity(M)
S
data(S)
attach(S)
NEIGHBORHOOD_NUM <- 2
N <- NearestNUserNeighborhood(S, NEIGHBORHOOD_NUM)
N
devtools::build()
devtools::build()
devtools::build_vignettes()
library(StatComp20070)
remove.packages("StatComp20070")
library(StatComp20070)
remove.packages("StatComp20070")
library(StatComp20070)
devtools::document()
devtools::check()
devtools::build()
devtools::build_vignettes()
remove.packages("StatComp20070")
